generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Patient {
    id            String          @id @default(cuid())
    name          String
    age           Int
    gender        String
    address       String
    phone         String
    email         String?         @unique
    admitted      Boolean         @default(false)
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt

    appointments  Appointment[]
    medicalRecords MedicalRecord[]
    billing        Billing[]
}

model Doctor {
    id          String   @id @default(cuid())
    name        String
    specialty   String
    phone       String
    email       String?  @unique
    available   Boolean  @default(true)
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    appointments Appointment[]
    schedules    Schedule[]
}

model Staff {
    id        String   @id @default(cuid())
    name      String
    role      String   // Nurse, Receptionist, Technician
    phone     String
    email     String?  @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Appointment {
    id         String   @id @default(cuid())
    patientId  String
    doctorId   String
    time       DateTime
    status     String   @default("Scheduled") // Scheduled, Completed, Cancelled
    notes      String?

    patient    Patient  @relation(fields: [patientId], references: [id])
    doctor     Doctor   @relation(fields: [doctorId], references: [id])
}

model MedicalRecord {
    id         String   @id @default(cuid())
    patientId  String
    diagnosis  String
    treatment  String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    patient    Patient  @relation(fields: [patientId], references: [id])
}

model Schedule {
    id         String   @id @default(cuid())
    doctorId   String
    day        String   // e.g., Monday
    startTime  DateTime
    endTime    DateTime

    doctor     Doctor   @relation(fields: [doctorId], references: [id])
}

model Room {
    id         String   @id @default(cuid())
    roomNumber String   @unique
    type       String   // General, ICU, etc.
    status     String   @default("Available")
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Billing {
    id         String   @id @default(cuid())
    patientId  String
    amount     Float
    status     String   @default("Pending") // Pending, Paid
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    patient    Patient  @relation(fields: [patientId], references: [id])
}
